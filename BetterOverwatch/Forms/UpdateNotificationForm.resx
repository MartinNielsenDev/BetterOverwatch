<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +7EG1nWgAAAAAElFTkSuQmCC
</value>
  </data>
</root>